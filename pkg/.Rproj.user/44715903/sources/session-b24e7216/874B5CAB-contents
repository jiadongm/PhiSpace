library(devtools)
# create_package("PhiSpaceR")
# use_mit_license()


# Attach all defined functions
load_all()


# Create or modify R functions
use_r("codeY")
use_r("svdspc.fit.R") # Internal
use_r("pls.fit.R") # Internal
use_r("mvr")
use_r("getPC")
use_r("utils") # Internal, containing several small functions
use_r("normPhiScores")
use_r("rcTransf")
use_r("zeroFeatQC")
use_r("translateLabel")
use_r("KeepCommonGenes")
use_r("phenotype") # Internal
use_r("getClass")
use_r("as.sparse.matrix.R")
use_r("RankTransf")
use_r("plotSankey")
use_r("plotSankey3")
use_r("pseudoBulk")
use_r("PhiSpaceR")
use_r("PhiSpaceR_1ref")
use_r("tunePhiSpace")
use_r("plotPhiSpaceHeatMap")
# use_r("viz")

use_r("selectFeat")
use_r("classErr") # Internal
use_r("getErr") # Internal
use_r("getErr_nfeat")
use_r("superPC") # Internal
use_r("CVTune_ncomp") # Internal
use_r("CVTune_nfeat") # Internal


## Dependencies
use_package("methods")
use_package("stats")
use_package("rARPACK")
use_package("SummarizedExperiment")
use_package("plyr")
use_package("SingleCellExperiment")
use_package("networkD3")
use_package("dplyr")
use_package("ggplot2")
use_package("magrittr")
use_package("tidyr")
use_package("Matrix")
use_package("ComplexHeatmap")

## Import functions
use_import_from("magrittr", "%>%")
use_import_from("zeallot", "%<-%")

# For a separate viz package
# use_package("ks")
# use_package("ggpubr")
# use_package("cowplot")
# use_package("gridExtra")

## rename function
rename_files("buildAtlas", "tunePhiSpace")


## Edit readme file
use_readme_rmd()
build_readme()

# Check and compiel package
# test()
document()
check()

## Commit
# use_git()
# use_github()
document()
check()
install()


### Case 1
load_all()
rm(list=ls()); gc()
dat_dir <- "/data/projects/punim0613/JiaDong/PhiSpace/"
source("~/PhiSpaceR/MATLAB_colScale.R")
source("~/PhiSpaceR/Case1/Rosa_cols.R")

## Load data
query <- readRDS(paste0(dat_dir, "output/Case1/query_Rosa_sub.rds"))
reference <- readRDS(paste0(dat_dir,"data/stemformatics/ref_dc.rds"))

reference <- RankTransf(reference, "data")
query <- RankTransf(query, "counts")

phenotypes <- c("Cell Type", "Sample Source")


## Tuning
regMethod <- "PCA"
tune_res <- tunePhiSpace(reference = reference,
                         assayName = "rank",
                         phenotypes = phenotypes,
                         ncompLimits = c(1,100),
                         ncompGridSize = 20,
                         nfeatLimits = c(10, 15000),
                         nfeatGridSize = 30,
                         Kfolds = 5,
                         regMethod = regMethod)

ncomp <- tune_res$ncomp
selectedFeat <- tune_res$selectedFeat

# ncomp <- 11
# nfeat <- 200
res <- PhiSpaceR_1ref(reference, query,
                      phenotypes = phenotypes,
                      PhiSpaceAssay = "rank",
                      regMethod = regMethod,
                      ncomp = ncomp,
                      nfeat = nfeat)

PhiSpaceScore_norm <- normPhiScores(res$PhiSpaceScore)
phenoDict <- res$phenoDict

queryLabs <- query$mainTypes
queryLvls <- c("DC1", "DC2", "pDC", "HEF", "Day3", "Day6", "Day9_DP", "Day9_SP")
plotPhiSpaceHeatMap(PhiSpaceScore_norm, reference, phenotypes,
                    queryLabs = queryLabs, refLvls = NULL, queryLvls = queryLvls,
                    column_names_rot = 45, row_title_rot = 0)
